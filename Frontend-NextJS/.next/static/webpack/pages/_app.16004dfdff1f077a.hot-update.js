"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./contexts/AuthContext.jsx":
/*!**********************************!*\
  !*** ./contexts/AuthContext.jsx ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(pages-dir-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"(pages-dir-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../firebase */ \"(pages-dir-browser)/./firebase.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n// Hardcoded admin emails (optional). You can also store these in Firestore.\nconst ADMIN_EMAILS = [\n    // Project admins\n    'indiacustomerhelp05@gmail.com',\n    'newmess1231@gmail.com',\n    'abhishekuniyal282@gmail.com'\n];\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // 'admin' | 'user' | null\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const FIRESTORE_ENABLED = (()=>{\n        try {\n            return process.env.NEXT_PUBLIC_FIRESTORE_ENABLED === '1';\n        } catch (_) {\n            return false;\n        }\n    })();\n    // Ensure a user doc exists with a role; if not, assign based on ADMIN_EMAILS\n    const ensureUserDoc = async (firebaseUser)=>{\n        if (!firebaseUser) return null;\n        const userEmail = firebaseUser.email || '';\n        const lowerEmail = userEmail.toLowerCase();\n        const derivedRole = ADMIN_EMAILS.includes(lowerEmail) ? 'admin' : 'user';\n        console.log('[AuthContext] ensureUserDoc:', {\n            email: userEmail,\n            lowerEmail,\n            isAdminEmail: ADMIN_EMAILS.includes(lowerEmail),\n            derivedRole,\n            adminEmails: ADMIN_EMAILS\n        });\n        // Fire-and-forget write to persist role; do not block login\n        if (FIRESTORE_ENABLED) {\n            try {\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, 'users', firebaseUser.uid), {\n                    uid: firebaseUser.uid,\n                    email: userEmail,\n                    displayName: firebaseUser.displayName || null,\n                    role: derivedRole,\n                    createdAt: new Date().toISOString()\n                }, {\n                    merge: true\n                });\n                console.log('[AuthContext] User doc saved to Firestore');\n            } catch (error) {\n                console.error('[AuthContext] Error saving user doc to Firestore:', error);\n            }\n        }\n        return derivedRole;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            const unsub = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.onAuthStateChanged)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth, {\n                \"AuthProvider.useEffect.unsub\": async (firebaseUser)=>{\n                    console.log('[AuthContext] Auth state changed:', firebaseUser === null || firebaseUser === void 0 ? void 0 : firebaseUser.email);\n                    if (!firebaseUser) {\n                        console.log('[AuthContext] No user, clearing state');\n                        setUser(null);\n                        setRole(null);\n                        setLoading(false);\n                        return;\n                    }\n                    console.log('[AuthContext] User found, setting user state');\n                    setUser(firebaseUser);\n                    try {\n                        console.log('[AuthContext] Ensuring user doc and role...');\n                        const currentRole = await ensureUserDoc(firebaseUser);\n                        console.log('[AuthContext] Role assigned:', currentRole);\n                        setRole(currentRole);\n                    } catch (error) {\n                        console.error('[AuthContext] Error ensuring user doc:', error);\n                        setRole('user');\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"AuthProvider.useEffect.unsub\"]);\n            ({\n                \"AuthProvider.useEffect\": async ()=>{\n                    try {\n                        const res = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getRedirectResult)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth);\n                        if (res === null || res === void 0 ? void 0 : res.user) {\n                            console.log('[AuthContext] Redirect result found:', res.user.email);\n                            const role = await ensureUserDoc(res.user);\n                            console.log('[AuthContext] Redirect user role assigned:', role);\n                        }\n                    } catch (error) {\n                        console.error('[AuthContext] Error handling redirect result:', error);\n                    }\n                }\n            })[\"AuthProvider.useEffect\"]();\n            return ({\n                \"AuthProvider.useEffect\": ()=>unsub()\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    const signupWithEmail = async (email, password, displayName)=>{\n        const cred = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.createUserWithEmailAndPassword)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth, email, password);\n        if (displayName) {\n            await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.updateProfile)(cred.user, {\n                displayName\n            });\n        }\n        const assignedRole = ADMIN_EMAILS.includes(email) ? 'admin' : 'user';\n        if (FIRESTORE_ENABLED) {\n            try {\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, 'users', cred.user.uid), {\n                    uid: cred.user.uid,\n                    email,\n                    displayName: displayName || null,\n                    role: assignedRole,\n                    createdAt: new Date().toISOString()\n                });\n            } catch (_err) {\n            // Ignore Firestore failure: account creation is still valid\n            }\n        }\n        return cred.user;\n    };\n    const loginWithEmail = (email, password)=>(0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInWithEmailAndPassword)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth, email, password);\n    const loginWithGoogle = async ()=>{\n        try {\n            // Check if popup is likely to be blocked\n            const isPopupBlocked = ()=>{\n                try {\n                    // Test if we can open a popup\n                    const testPopup = window.open('', '_blank', 'width=1,height=1');\n                    if (testPopup) {\n                        testPopup.close();\n                        return false;\n                    }\n                    return true;\n                } catch (e) {\n                    return true;\n                }\n            };\n            // Check for COOP policy or popup blocking\n            const shouldUseRedirect = isPopupBlocked() || window.navigator.userAgent.includes('Safari') || // Safari has stricter COOP\n            window.navigator.userAgent.includes('Firefox'); // Firefox has COOP issues\n            if (shouldUseRedirect) {\n                console.log('[AuthContext] Using redirect flow (popup likely blocked or COOP issue)');\n                await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInWithRedirect)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth, _firebase__WEBPACK_IMPORTED_MODULE_4__.googleProvider);\n                return null; // Will be handled by redirect result\n            }\n            // Try popup with better error handling\n            try {\n                const cred = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInWithPopup)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth, _firebase__WEBPACK_IMPORTED_MODULE_4__.googleProvider);\n                console.log('[AuthContext] Google sign-in successful:', cred.user.email);\n                try {\n                    const role = await ensureUserDoc(cred.user);\n                    console.log('[AuthContext] User role assigned:', role);\n                } catch (error) {\n                    console.error('[AuthContext] Error ensuring user doc:', error);\n                }\n                return cred.user;\n            } catch (popupError) {\n                console.error('[AuthContext] Google popup failed:', popupError);\n                // Check if it's a COOP or popup blocked error\n                const isPopupBlockedError = popupError.code === 'auth/popup-blocked' || popupError.code === 'auth/popup-closed-by-user' || popupError.message.includes('Cross-Origin-Opener-Policy') || popupError.message.includes('COOP');\n                if (isPopupBlockedError) {\n                    console.log('[AuthContext] Popup blocked, falling back to redirect');\n                    await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInWithRedirect)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth, _firebase__WEBPACK_IMPORTED_MODULE_4__.googleProvider);\n                    return null; // Will be handled by redirect result\n                }\n                throw popupError;\n            }\n        } catch (error) {\n            console.error('[AuthContext] Google authentication failed:', error);\n            // Final fallback to redirect\n            if (error.code !== 'auth/popup-closed-by-user') {\n                try {\n                    console.log('[AuthContext] Final fallback to redirect');\n                    await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInWithRedirect)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth, _firebase__WEBPACK_IMPORTED_MODULE_4__.googleProvider);\n                    return null;\n                } catch (redirectError) {\n                    console.error('[AuthContext] All Google auth methods failed:', redirectError);\n                    throw error; // Throw original error\n                }\n            }\n            throw error;\n        }\n    };\n    const logout = ()=>(0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signOut)(_firebase__WEBPACK_IMPORTED_MODULE_4__.auth);\n    const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"AuthProvider.useMemo[value]\": ()=>({\n                user,\n                role,\n                loading,\n                signupWithEmail,\n                loginWithEmail,\n                loginWithGoogle,\n                logout\n            })\n    }[\"AuthProvider.useMemo[value]\"], [\n        user,\n        role,\n        loading\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Newmess Internship\\\\Production_1\\\\Frontend-NextJS\\\\contexts\\\\AuthContext.jsx\",\n        lineNumber: 222,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AuthProvider, \"2jAb8IXb5jsDc04roThubmNR2DY=\");\n_c = AuthProvider;\nconst useAuth = ()=>{\n    _s1();\n    const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n    return ctx;\n};\n_s1(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./contexts/AuthContext.jsx\n"));

/***/ })

});