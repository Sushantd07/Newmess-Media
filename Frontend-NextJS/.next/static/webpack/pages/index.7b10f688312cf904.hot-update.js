"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./services/seoService.js":
/*!********************************!*\
  !*** ./services/seoService.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nconst API_BASE_URL_ROOT = \"http://localhost:3000/api\" || 0 || 0;\nconst API_BASE_URL = \"\".concat(API_BASE_URL_ROOT, \"/seo\");\n// Add timeout configuration\nconst API_TIMEOUT = 10000; // 10 seconds\nconst isSeoDebugEnabled = (()=>{\n    try {\n        if (process.env.NEXT_PUBLIC_SEO_DEBUG === '1') return true;\n        if (true) return true; // Enable debug in development\n        if (true) {\n            const flag = window.localStorage.getItem('seo:debug');\n            if (flag === '1' || flag === 'true') return true;\n        }\n    } catch (_) {}\n    return false;\n})();\nconst dbg = function() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (isSeoDebugEnabled) {\n        // eslint-disable-next-line no-console\n        console.log(...args);\n    }\n};\n// Helper function to create fetch with timeout\nconst fetchWithTimeout = async function(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, timeout = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : API_TIMEOUT;\n    const controller = new AbortController();\n    const timeoutId = setTimeout(()=>controller.abort(), timeout);\n    try {\n        const response = await fetch(url, {\n            ...options,\n            signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        return response;\n    } catch (error) {\n        clearTimeout(timeoutId);\n        if (error.name === 'AbortError') {\n            throw new Error(\"Request timed out after \".concat(timeout, \"ms\"));\n        }\n        throw error;\n    }\n};\nconst SeoService = {\n    async get (param) {\n        let { type, identifier, path, tab } = param;\n        var _env, _this, _env1, _this1, _env2, _this2;\n        const params = new URLSearchParams({\n            type,\n            identifier\n        });\n        if (type === 'route' && path) params.set('path', path);\n        if (tab) params.set('tab', tab);\n        const url = \"\".concat(API_BASE_URL, \"?\").concat(params.toString());\n        dbg('[SeoService] GET request:', url);\n        // Add production debugging\n        console.log('[SeoService] Production Debug - API_BASE_URL_ROOT:', API_BASE_URL_ROOT);\n        console.log('[SeoService] Production Debug - API_BASE_URL:', API_BASE_URL);\n        console.log('[SeoService] Production Debug - Full URL:', url);\n        console.log('[SeoService] Production Debug - Environment:', {\n            VITE_API_BASE_URL: (_this = ({})) === null || _this === void 0 ? void 0 : (_env = _this.env) === null || _env === void 0 ? void 0 : _env.VITE_API_BASE_URL,\n            NODE_ENV: (_this1 = ({})) === null || _this1 === void 0 ? void 0 : (_env1 = _this1.env) === null || _env1 === void 0 ? void 0 : _env1.MODE,\n            PROD: (_this2 = ({})) === null || _this2 === void 0 ? void 0 : (_env2 = _this2.env) === null || _env2 === void 0 ? void 0 : _env2.PROD\n        });\n        try {\n            var _json_data, _json_data1, _json_data2, _json_data3;\n            const res = await fetchWithTimeout(url);\n            const contentType = res.headers.get('content-type') || '';\n            let json = null;\n            try {\n                if (contentType.includes('application/json')) {\n                    json = await res.json();\n                }\n            } catch (_) {}\n            console.log('[SeoService] Production Debug - Response status:', res.status);\n            console.log('[SeoService] Production Debug - Response headers:', Object.fromEntries(res.headers.entries()));\n            console.log('[SeoService] Production Debug - Response body:', json);\n            if (!res.ok) {\n                dbg('[SeoService] GET non-OK response:', res.status, json);\n                console.error('[SeoService] Production Error - Non-OK response:', res.status, json);\n                return null;\n            }\n            dbg('[SeoService] GET response:', json);\n            if (!json || json.success === false) {\n                console.error('[SeoService] Production Error - API returned false success:', json);\n                return null;\n            }\n            console.log('[SeoService] Production Success - SEO data retrieved:', json.data);\n            console.log('[SeoService] SEO data structure:', {\n                hasTitle: !!((_json_data = json.data) === null || _json_data === void 0 ? void 0 : _json_data.title),\n                hasDescription: !!((_json_data1 = json.data) === null || _json_data1 === void 0 ? void 0 : _json_data1.description),\n                title: (_json_data2 = json.data) === null || _json_data2 === void 0 ? void 0 : _json_data2.title,\n                description: (_json_data3 = json.data) === null || _json_data3 === void 0 ? void 0 : _json_data3.description,\n                keys: json.data ? Object.keys(json.data) : []\n            });\n            var _json_data4;\n            return (_json_data4 = json.data) !== null && _json_data4 !== void 0 ? _json_data4 : null;\n        } catch (error) {\n            console.error('[SeoService] GET request failed:', error.message);\n            console.error('[SeoService] Production Error - Full error:', error);\n            return null;\n        }\n    },\n    async upsert (payload) {\n        dbg('[SeoService] POST request:', payload);\n        console.log('[SeoService] Making POST request to:', API_BASE_URL);\n        console.log('[SeoService] API_BASE_URL_ROOT:', API_BASE_URL_ROOT);\n        console.log('[SeoService] Payload being sent:', JSON.stringify(payload, null, 2));\n        try {\n            const res = await fetchWithTimeout(API_BASE_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(payload)\n            });\n            let json = null;\n            try {\n                json = await res.json();\n            } catch (_) {}\n            dbg('[SeoService] POST response:', json);\n            console.log('[SeoService] Response status:', res.status);\n            console.log('[SeoService] Response headers:', Object.fromEntries(res.headers.entries()));\n            console.log('[SeoService] Response body:', json);\n            if (!res.ok || !json || json.success === false) {\n                console.error('[SeoService] Request failed:', {\n                    status: res.status,\n                    json\n                });\n                throw new Error((json === null || json === void 0 ? void 0 : json.message) || 'Failed to save SEO');\n            }\n            return json.data;\n        } catch (error) {\n            console.error('[SeoService] POST request failed:', error.message);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SeoService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./services/seoService.js\n"));

/***/ })

});