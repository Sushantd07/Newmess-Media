"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/DynamicSEO.jsx":
/*!***********************************!*\
  !*** ./components/DynamicSEO.jsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeDefaultsFromDom: () => (/* binding */ computeDefaultsFromDom),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"(pages-dir-browser)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _services_seoService_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/seoService.js */ \"(pages-dir-browser)/./services/seoService.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"(pages-dir-browser)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n// Debug flag and logger: enable by setting VITE_SEO_DEBUG=1 or localStorage 'seo:debug' = '1'\nconst isSeoDebugEnabled = (()=>{\n    try {\n        if (process.env.NEXT_PUBLIC_SEO_DEBUG === '1') return true;\n        if (true) {\n            const flag =  true ? window.localStorage.getItem('seo:debug') : 0;\n            if (flag === '1' || flag === 'true') return true;\n        }\n    } catch (_) {}\n    return false;\n})();\nconst dbg = function() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (isSeoDebugEnabled) {\n        // eslint-disable-next-line no-console\n        console.log(...args);\n    }\n};\nconst computeDefaultsFromDom = ()=>{\n    const getMeta = (selector)=>{\n        var _document_querySelector;\n        return ((_document_querySelector = document.querySelector(selector)) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.getAttribute('content')) || '';\n    };\n    const getHref = (selector)=>{\n        var _document_querySelector;\n        return ((_document_querySelector = document.querySelector(selector)) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.getAttribute('href')) || '';\n    };\n    return {\n        title: document.title || '',\n        description: getMeta('meta[name=\"description\"]'),\n        keywords: getMeta('meta[name=\"keywords\"]'),\n        canonical: getHref('link[rel=\"canonical\"]') || ( true ? window.location.href : 0),\n        robots: getMeta('meta[name=\"robots\"]') || 'index,follow',\n        lang: document.documentElement.getAttribute('lang') || 'en',\n        publisher: getMeta('meta[name=\"publisher\"]'),\n        ogTitle: getMeta('meta[property=\"og:title\"]'),\n        ogDescription: getMeta('meta[property=\"og:description\"]'),\n        ogImage: getMeta('meta[property=\"og:image\"]'),\n        twitterCard: getMeta('meta[name=\"twitter:card\"]') || 'summary_large_image'\n    };\n};\nconst DynamicSEO = (param)=>{\n    let { type, identifier, tab } = param;\n    var _location, _location1, _location2, _location3, _location4;\n    _s();\n    // Safe mode: allow disabling this component to prevent blank screens\n    const seoDisabled = (()=>{\n        try {\n            if (process.env.NEXT_PUBLIC_DISABLE_SEO === '1') return true;\n            if (true) {\n                const flag = window.localStorage.getItem('seo:disable');\n                if (flag === '1' || flag === 'true') return true;\n            }\n        } catch (_) {}\n        return false;\n    })();\n    if (seoDisabled) {\n        return null;\n    }\n    // Early return if we're in a loading state or if the component is causing issues\n    const [isComponentEnabled, setIsComponentEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Disable component if it's causing performance issues\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            const timeout = setTimeout({\n                \"DynamicSEO.useEffect.timeout\": ()=>{\n                    if (document.title === 'Loading…' || document.title === '') {\n                        console.warn('[DynamicSEO] Component disabled due to performance issues');\n                        setIsComponentEnabled(false);\n                    }\n                }\n            }[\"DynamicSEO.useEffect.timeout\"], 5000); // 5 second timeout\n            return ({\n                \"DynamicSEO.useEffect\": ()=>clearTimeout(timeout)\n            })[\"DynamicSEO.useEffect\"];\n        }\n    }[\"DynamicSEO.useEffect\"], []);\n    if (!isComponentEnabled) {\n        return null;\n    }\n    const [seo, setSeo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const lastEventApplyAtRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    // Simple render log to verify component is mounting\n    dbg('[DynamicSEO] Component rendered with props:', {\n        type,\n        identifier,\n        tab\n    });\n    dbg('[DynamicSEO] Component is DEFINITELY RENDERING!');\n    // Normalize/compute canonical for current environment\n    const computeCanonicalHref = (incoming)=>{\n        if (false) {}\n        try {\n            const origin = window.location.origin;\n            const pathname = window.location.pathname;\n            if (!incoming) return \"\".concat(origin).concat(pathname);\n            // If incoming is relative, resolve against current origin\n            const resolved = new URL(incoming, origin);\n            // Force current origin; keep pathname from incoming if it looks like a path, otherwise use current\n            const finalPathname = resolved.pathname && resolved.pathname !== '/' ? resolved.pathname : pathname;\n            return \"\".concat(origin).concat(finalPathname);\n        } catch (e) {\n            return \"\".concat(window.location.origin).concat(window.location.pathname);\n        }\n    };\n    // Auto-detect page type and identifier if not provided\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    const getPageInfo = ()=>{\n        const currentPath = (router === null || router === void 0 ? void 0 : router.pathname) || ( true ? window.location.pathname : 0);\n        dbg('[DynamicSEO] Auto-detecting page info for path:', currentPath);\n        // Home page – use route-based identifier for production parity\n        if (currentPath === '/') {\n            return {\n                type: 'route',\n                identifier: '/',\n                tab: undefined\n            };\n        }\n        // Company pages - check for all possible tab URLs\n        if (currentPath.startsWith('/category/')) {\n            const pathParts = currentPath.split('/').filter(Boolean); // remove empty segments\n            const lastSegment = pathParts[pathParts.length - 1];\n            const validTabs = [\n                'contactnumber',\n                'complain',\n                'quickhelp',\n                'videoguide',\n                'overview'\n            ];\n            if (validTabs.includes(lastSegment)) {\n                const companySlug = pathParts[pathParts.length - 2];\n                dbg('[DynamicSEO] Detected company page with tab:', companySlug, lastSegment);\n                return {\n                    type: 'company',\n                    identifier: companySlug,\n                    tab: lastSegment\n                };\n            }\n        }\n        // Category pages (e.g., /category/:categoryId)\n        if (/^\\/category\\/[^\\/]+$/.test(currentPath)) {\n            const categoryId = currentPath.split('/')[2];\n            dbg('[DynamicSEO] Detected category page:', categoryId);\n            return {\n                type: 'category',\n                identifier: categoryId,\n                tab: undefined\n            };\n        }\n        // All categories page – use route-based identifier for production parity\n        if (currentPath === '/category') {\n            dbg('[DynamicSEO] Detected all-categories page');\n            return {\n                type: 'route',\n                identifier: '/category',\n                tab: undefined\n            };\n        }\n        // Route pages\n        if (currentPath === '/about') {\n            dbg('[DynamicSEO] Detected about page');\n            return {\n                type: 'route',\n                identifier: '/about',\n                tab: undefined\n            };\n        }\n        // Default to provided props\n        return {\n            type,\n            identifier,\n            tab\n        };\n    };\n    const pageInfo = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"DynamicSEO.useMemo[pageInfo]\": ()=>getPageInfo()\n    }[\"DynamicSEO.useMemo[pageInfo]\"], [\n        router === null || router === void 0 ? void 0 : router.pathname,\n        type,\n        identifier,\n        tab\n    ]);\n    const actualType = pageInfo.type;\n    const actualIdentifier = pageInfo.identifier;\n    const actualTab = pageInfo.tab;\n    dbg('[DynamicSEO] Using page info:', pageInfo);\n    // Check if this component should be active for the current page\n    const isActiveForCurrentPage = ()=>{\n        const currentPath = (router === null || router === void 0 ? void 0 : router.pathname) || ( true ? window.location.pathname : 0);\n        dbg('[DynamicSEO] Checking if active for path:', currentPath, 'with detected info:', {\n            actualType,\n            actualIdentifier,\n            actualTab\n        });\n        // Always active since we auto-detect the page type\n        dbg('[DynamicSEO] Component is active for current page');\n        return true;\n    };\n    const isActive = isActiveForCurrentPage();\n    dbg('[DynamicSEO] Is active for current page:', isActive, 'Current path:',  true ? window.location.pathname : 0);\n    // Allow multiple instances; latest write wins. Removed conflicting guard that deactivated others.\n    // Add a visible debug element to confirm component is rendering\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            var _document_querySelector, _document_querySelector1;\n            dbg('[DynamicSEO] useEffect triggered - component is definitely working!');\n            // Only render the yellow debug overlay when debug is enabled\n            if (!isSeoDebugEnabled) return;\n            if (typeof document === 'undefined') return;\n            if (!isActive) return;\n            dbg('[DynamicSEO] Adding debug element to page');\n            const debugDivId = \"dynamic-seo-debug-\".concat(actualType, \"-\").concat(actualIdentifier);\n            const debugDiv = document.createElement('div');\n            debugDiv.id = debugDivId;\n            debugDiv.setAttribute('data-dynamic-seo-active', 'true');\n            debugDiv.style.cssText = 'position: fixed; top: 50px; right: 10px; z-index: 9999; background: yellow; color: black; padding: 10px; border: 2px solid red; font-size: 12px; max-width: 200px;';\n            debugDiv.innerHTML = \"\\n      <strong>DynamicSEO Debug (ACTIVE)</strong><br>\\n      Type: \".concat(actualType, \"<br>\\n      Identifier: \").concat(actualIdentifier, \"<br>\\n      Tab: \").concat(actualTab || 'undefined', \"<br>\\n      Has SEO Data: \").concat(seo ? 'YES' : 'NO', \"<br>\\n      SEO Title: \").concat((seo === null || seo === void 0 ? void 0 : seo.title) || 'NONE', \"<br>\\n      Canonical: \").concat(typeof document !== 'undefined' ? ((_document_querySelector = document.querySelector('link[rel=\"canonical\"]')) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.getAttribute('href')) || 'NONE' : 'N/A', \"<br>\\n      Robots: \").concat(typeof document !== 'undefined' ? ((_document_querySelector1 = document.querySelector('meta[name=\"robots\"]')) === null || _document_querySelector1 === void 0 ? void 0 : _document_querySelector1.getAttribute('content')) || 'NONE' : 'N/A', \"\\n    \");\n            const existingDiv = document.getElementById(debugDivId);\n            if (existingDiv) {\n                document.body.removeChild(existingDiv);\n            }\n            document.body.appendChild(debugDiv);\n            dbg('[DynamicSEO] Debug div added to page with ID:', debugDivId);\n            const timeout = setTimeout({\n                \"DynamicSEO.useEffect.timeout\": ()=>{\n                    if (document.body.contains(debugDiv)) {\n                        debugDiv.removeAttribute('data-dynamic-seo-active');\n                        document.body.removeChild(debugDiv);\n                    }\n                }\n            }[\"DynamicSEO.useEffect.timeout\"], 30000);\n            return ({\n                \"DynamicSEO.useEffect\": ()=>clearTimeout(timeout)\n            })[\"DynamicSEO.useEffect\"];\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        actualType,\n        actualIdentifier,\n        actualTab,\n        isActive\n    ]); // Removed 'seo' dependency to prevent infinite re-renders\n    // Clear stale SEO immediately on route/target change so prior page data doesn't persist\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            if (typeof document === 'undefined') return;\n            // Reset local state\n            setSeo(null);\n            // Neutralize head quickly\n            const neutralTitle = \"Loading…\";\n            document.title = neutralTitle;\n            let metaDesc = document.querySelector('meta[name=\"description\"]');\n            if (metaDesc) metaDesc.setAttribute('content', '');\n            let metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n            if (metaKeywords) metaKeywords.setAttribute('content', '');\n            let robots = document.querySelector('meta[name=\"robots\"]');\n            if (!robots) {\n                robots = document.createElement('meta');\n                robots.name = 'robots';\n                document.head.appendChild(robots);\n            }\n            robots.setAttribute('content', 'index,follow');\n            // Self-referencing canonical for the new route\n            const allCanonicals = Array.from(document.querySelectorAll('link[rel=\"canonical\"]'));\n            allCanonicals.slice(1).forEach({\n                \"DynamicSEO.useEffect\": (el)=>el.parentNode && el.parentNode.removeChild(el)\n            }[\"DynamicSEO.useEffect\"]);\n            let canonicalLink = allCanonicals[0];\n            if (!canonicalLink) {\n                canonicalLink = document.createElement('link');\n                canonicalLink.rel = 'canonical';\n                document.head.appendChild(canonicalLink);\n            }\n            if (true) {\n                canonicalLink.setAttribute('href', \"\".concat(window.location.origin).concat(window.location.pathname));\n            }\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        (_location = location) === null || _location === void 0 ? void 0 : _location.pathname,\n        actualType,\n        actualIdentifier,\n        actualTab\n    ]);\n    // Fetch SEO data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            let mounted = true;\n            // Only fetch if this component is active for the current page\n            if (!isActive) {\n                dbg('[DynamicSEO] Skipping fetch - component not active for current page');\n                return;\n            }\n            if (!actualIdentifier) {\n                dbg('[DynamicSEO] Skipping fetch - no identifier provided');\n                if (mounted) {\n                    setSeo(null);\n                }\n                return;\n            }\n            dbg('[DynamicSEO] Starting fetch for:', {\n                actualType,\n                actualIdentifier,\n                actualTab\n            });\n            ({\n                \"DynamicSEO.useEffect\": async ()=>{\n                    try {\n                        dbg('[DynamicSEO] Making API call to fetch SEO data...');\n                        const data = await _services_seoService_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get({\n                            type: actualType,\n                            identifier: actualIdentifier,\n                            // Always send current path to allow backend to resolve by path if needed\n                            path:  true ? window.location.pathname : 0,\n                            tab: actualTab\n                        });\n                        dbg('[DynamicSEO] API response received:', data);\n                        if (mounted) {\n                            const justAppliedMsAgo = Date.now() - lastEventApplyAtRef.current;\n                            if (justAppliedMsAgo < 1200) {\n                                dbg('[DynamicSEO] Ignoring fetch result because recent event was applied', justAppliedMsAgo);\n                                return;\n                            }\n                            if (data) {\n                                dbg('[DynamicSEO] Setting SEO data:', data);\n                                setSeo(data);\n                            } else {\n                                dbg('[DynamicSEO] No SEO data found, setting to null');\n                                setSeo(null);\n                            }\n                        }\n                    } catch (error) {\n                        if (isSeoDebugEnabled) {\n                            // eslint-disable-next-line no-console\n                            console.error('[DynamicSEO] Error fetching SEO data:', error);\n                        }\n                        if (mounted) {\n                            setSeo(null);\n                        }\n                    }\n                }\n            })[\"DynamicSEO.useEffect\"]();\n            return ({\n                \"DynamicSEO.useEffect\": ()=>{\n                    mounted = false;\n                }\n            })[\"DynamicSEO.useEffect\"];\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        actualType,\n        actualIdentifier,\n        actualTab,\n        isActive\n    ]);\n    // Handle SEO updates from SeoSettingsPanel\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            const handleUpdated = {\n                \"DynamicSEO.useEffect.handleUpdated\": (e)=>{\n                    const payload = e.detail || {};\n                    dbg('[DynamicSEO] Received seo-updated event:', payload);\n                    // Match against the detected page info, not the raw props (which may be undefined)\n                    const matchesType = !payload.type || payload.type === actualType;\n                    const matchesIdentifier = !payload.identifier || payload.identifier === actualIdentifier;\n                    const matchesTab = !actualTab || !payload.tab || payload.tab === actualTab;\n                    if (matchesType && matchesIdentifier && matchesTab) {\n                        dbg('[DynamicSEO] Updating SEO data from event for current page:', {\n                            actualType,\n                            actualIdentifier,\n                            actualTab\n                        });\n                        setSeo(payload);\n                        lastEventApplyAtRef.current = Date.now();\n                        // After a short delay, re-fetch from backend to ensure persistence and sync any normalization\n                        setTimeout({\n                            \"DynamicSEO.useEffect.handleUpdated\": async ()=>{\n                                try {\n                                    const refreshed = await _services_seoService_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get({\n                                        type: actualType,\n                                        identifier: actualIdentifier,\n                                        path:  true ? window.location.pathname : 0,\n                                        tab: actualTab\n                                    });\n                                    if (refreshed) {\n                                        dbg('[DynamicSEO] Refreshed SEO after save:', refreshed);\n                                        setSeo(refreshed);\n                                        lastEventApplyAtRef.current = Date.now();\n                                    }\n                                } catch (_) {\n                                // ignore\n                                }\n                            }\n                        }[\"DynamicSEO.useEffect.handleUpdated\"], 150);\n                    } else {\n                        dbg('[DynamicSEO] Ignored seo-updated event (not current page). Current:', {\n                            actualType,\n                            actualIdentifier,\n                            actualTab\n                        });\n                    }\n                }\n            }[\"DynamicSEO.useEffect.handleUpdated\"];\n            window.addEventListener('seo-updated', handleUpdated);\n            return ({\n                \"DynamicSEO.useEffect\": ()=>window.removeEventListener('seo-updated', handleUpdated)\n            })[\"DynamicSEO.useEffect\"];\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        actualType,\n        actualIdentifier,\n        actualTab\n    ]);\n    // Default values\n    const defaults = {\n        title: '',\n        description: '',\n        keywords: [],\n        canonical:  true ? window.location.href : 0,\n        robots: 'index,follow',\n        lang: 'en',\n        publisher: '',\n        ogTitle: '',\n        ogDescription: '',\n        ogImage: '',\n        twitterCard: '',\n        structuredData: null\n    };\n    const { title, description, keywords, canonical, robots, lang, publisher, ogTitle, ogDescription, ogImage, twitterCard, structuredData } = seo || defaults;\n    // Debug current SEO state\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            dbg('[DynamicSEO] Current SEO state:', {\n                title,\n                description,\n                robots,\n                canonical,\n                hasSeoData: !!seo\n            });\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        seo,\n        title,\n        description,\n        robots,\n        canonical\n    ]);\n    // Apply SEO data to document head\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)({\n        \"DynamicSEO.useLayoutEffect\": ()=>{\n            if (typeof document !== 'undefined' && seo && isActive) {\n                dbg('[DynamicSEO] useLayoutEffect triggered with SEO data:', seo);\n                dbg('[DynamicSEO] About to apply title:', seo.title);\n                dbg('[DynamicSEO] About to apply description:', seo.description);\n                // Set title\n                if (seo.title) {\n                    const oldTitle = document.title;\n                    document.title = seo.title;\n                    dbg('[DynamicSEO] Title changed from:', oldTitle, 'to:', seo.title);\n                    // Verify title was set\n                    setTimeout({\n                        \"DynamicSEO.useLayoutEffect\": ()=>{\n                            dbg('[DynamicSEO] Title verification - Current title:', document.title);\n                            if (document.title !== seo.title) {\n                                dbg('[DynamicSEO] WARNING: Title was not set correctly! Expected:', seo.title, 'Got:', document.title);\n                            }\n                        }\n                    }[\"DynamicSEO.useLayoutEffect\"], 50);\n                }\n                // Set meta description\n                if (seo.description) {\n                    let metaDesc = document.querySelector('meta[name=\"description\"]');\n                    if (!metaDesc) {\n                        metaDesc = document.createElement('meta');\n                        metaDesc.name = 'description';\n                        document.head.appendChild(metaDesc);\n                    }\n                    metaDesc.content = seo.description;\n                    dbg('[DynamicSEO] Set meta description to:', seo.description);\n                }\n                // Set robots meta (default to index,follow if not provided)\n                {\n                    let metaRobots = document.querySelector('meta[name=\"robots\"]');\n                    if (!metaRobots) {\n                        metaRobots = document.createElement('meta');\n                        metaRobots.name = 'robots';\n                        document.head.appendChild(metaRobots);\n                    }\n                    const robotsValue = seo.robots || 'index,follow';\n                    metaRobots.content = robotsValue;\n                    dbg('[DynamicSEO] Set robots meta to:', robotsValue);\n                }\n                // Set or clear keywords meta\n                {\n                    let metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n                    if (seo.keywords && seo.keywords.length > 0) {\n                        if (!metaKeywords) {\n                            metaKeywords = document.createElement('meta');\n                            metaKeywords.name = 'keywords';\n                            document.head.appendChild(metaKeywords);\n                        }\n                        metaKeywords.content = Array.isArray(seo.keywords) ? seo.keywords.join(', ') : seo.keywords;\n                        dbg('[DynamicSEO] Set keywords meta to:', seo.keywords);\n                    } else if (metaKeywords) {\n                        // Clear stale keywords\n                        metaKeywords.content = '';\n                        dbg('[DynamicSEO] Cleared keywords meta (no keywords provided)');\n                    }\n                }\n                // Set canonical link (ensure a single canonical; default to origin+pathname)\n                {\n                    const allCanonicals = Array.from(document.querySelectorAll('link[rel=\"canonical\"]'));\n                    allCanonicals.slice(1).forEach({\n                        \"DynamicSEO.useLayoutEffect\": (el)=>el.parentNode && el.parentNode.removeChild(el)\n                    }[\"DynamicSEO.useLayoutEffect\"]);\n                    let canonicalLink = allCanonicals[0];\n                    if (!canonicalLink) {\n                        canonicalLink = document.createElement('link');\n                        canonicalLink.rel = 'canonical';\n                        document.head.appendChild(canonicalLink);\n                    }\n                    const currentCanonical =  true ? \"\".concat(window.location.origin).concat(window.location.pathname) : 0;\n                    // Always self-referencing canonical for SPA routes\n                    const canonicalHref = currentCanonical;\n                    canonicalLink.setAttribute('href', canonicalHref);\n                    dbg('[DynamicSEO] Set canonical link to:', canonicalHref);\n                }\n            } else {\n                dbg('[DynamicSEO] useLayoutEffect - not applying SEO:', {\n                    hasDocument: typeof document !== 'undefined',\n                    hasSeo: !!seo,\n                    isActive,\n                    seoData: seo\n                });\n            }\n        }\n    }[\"DynamicSEO.useLayoutEffect\"], [\n        seo,\n        isActive,\n        (_location1 = location) === null || _location1 === void 0 ? void 0 : _location1.pathname\n    ]);\n    // Persist canonical and robots against external changes (e.g., other libs rewriting head)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            if (typeof document === 'undefined') return;\n            if (!isActive) return;\n            const desiredCanonical =  true ? \"\".concat(window.location.origin).concat(window.location.pathname) : 0;\n            // Prefer index,follow unless SEO explicitly contains 'noindex'\n            const desiredRobots = seo && typeof seo.robots === 'string' && /noindex/i.test(seo.robots) ? seo.robots : 'index,follow';\n            let enforcing = false;\n            let debounceTimer = null;\n            const getOrCreateCanonical = {\n                \"DynamicSEO.useEffect.getOrCreateCanonical\": ()=>{\n                    let el = document.querySelector('link[rel=\"canonical\"][data-dynamic-seo=\"true\"]');\n                    if (!el) {\n                        el = document.createElement('link');\n                        el.rel = 'canonical';\n                        el.setAttribute('data-dynamic-seo', 'true');\n                        document.head.appendChild(el);\n                    }\n                    return el;\n                }\n            }[\"DynamicSEO.useEffect.getOrCreateCanonical\"];\n            const getOrCreateRobots = {\n                \"DynamicSEO.useEffect.getOrCreateRobots\": ()=>{\n                    let el = document.querySelector('meta[name=\"robots\"]');\n                    if (!el) {\n                        el = document.createElement('meta');\n                        el.name = 'robots';\n                        document.head.appendChild(el);\n                    }\n                    return el;\n                }\n            }[\"DynamicSEO.useEffect.getOrCreateRobots\"];\n            const enforce = {\n                \"DynamicSEO.useEffect.enforce\": ()=>{\n                    if (enforcing) return;\n                    enforcing = true;\n                    try {\n                        const canonicalEl = getOrCreateCanonical();\n                        const targetHref = actualType === 'company' && (seo === null || seo === void 0 ? void 0 : seo.canonical) ? computeCanonicalHref(seo.canonical) : desiredCanonical;\n                        if (canonicalEl.getAttribute('href') !== targetHref) {\n                            canonicalEl.setAttribute('href', targetHref);\n                            dbg('[DynamicSEO] Enforce canonical ->', targetHref);\n                        }\n                        const robotsEl = getOrCreateRobots();\n                        if (robotsEl.getAttribute('content') !== desiredRobots) {\n                            robotsEl.setAttribute('content', desiredRobots);\n                            dbg('[DynamicSEO] Enforce robots ->', desiredRobots);\n                        }\n                    } finally{\n                        enforcing = false;\n                    }\n                }\n            }[\"DynamicSEO.useEffect.enforce\"];\n            // Initial and single delayed enforcement\n            enforce();\n            const t1 = setTimeout(enforce, 100);\n            // Observe only relevant elements and debounce reactions to avoid loops\n            const observer = new MutationObserver({\n                \"DynamicSEO.useEffect\": ()=>{\n                    if (debounceTimer) clearTimeout(debounceTimer);\n                    debounceTimer = setTimeout(enforce, 60);\n                }\n            }[\"DynamicSEO.useEffect\"]);\n            observer.observe(document.head, {\n                childList: true,\n                subtree: true,\n                attributes: true,\n                attributeFilter: [\n                    'href',\n                    'content',\n                    'rel'\n                ]\n            });\n            return ({\n                \"DynamicSEO.useEffect\": ()=>{\n                    clearTimeout(t1);\n                    if (debounceTimer) clearTimeout(debounceTimer);\n                    observer.disconnect();\n                }\n            })[\"DynamicSEO.useEffect\"];\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        isActive,\n        (_location2 = location) === null || _location2 === void 0 ? void 0 : _location2.pathname,\n        seo === null || seo === void 0 ? void 0 : seo.canonical,\n        seo === null || seo === void 0 ? void 0 : seo.robots\n    ]);\n    // When no SEO is configured for the page, explicitly set clear/neutral tags\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)({\n        \"DynamicSEO.useLayoutEffect\": ()=>{\n            var _location;\n            if (typeof document === 'undefined') return;\n            if (!isActive) return;\n            if (seo !== null) return; // only when backend returned no SEO\n            const currentPath = ((_location = location) === null || _location === void 0 ? void 0 : _location.pathname) || ( true ? window.location.pathname : 0);\n            const neutralTitle = \"SEO not configured \\xb7 \".concat(currentPath);\n            const neutralDescription = 'SEO has not been configured for this page yet.';\n            // Set a safe title so previous page title doesn't persist\n            const oldTitle = document.title;\n            document.title = neutralTitle;\n            let titleTag = document.querySelector('title');\n            if (!titleTag) {\n                titleTag = document.createElement('title');\n                document.head.appendChild(titleTag);\n            }\n            titleTag.textContent = neutralTitle;\n            // Description\n            let metaDesc = document.querySelector('meta[name=\"description\"]');\n            if (!metaDesc) {\n                metaDesc = document.createElement('meta');\n                metaDesc.name = 'description';\n                document.head.appendChild(metaDesc);\n            }\n            metaDesc.content = neutralDescription;\n            // Robots: default to index,follow as requested\n            let metaRobots = document.querySelector('meta[name=\"robots\"]');\n            if (!metaRobots) {\n                metaRobots = document.createElement('meta');\n                metaRobots.name = 'robots';\n                document.head.appendChild(metaRobots);\n            }\n            metaRobots.content = 'index,follow';\n            // Canonical to current URL always (origin + pathname, remove duplicates)\n            const allCanonicals = Array.from(document.querySelectorAll('link[rel=\"canonical\"]'));\n            allCanonicals.slice(1).forEach({\n                \"DynamicSEO.useLayoutEffect\": (el)=>el.parentNode && el.parentNode.removeChild(el)\n            }[\"DynamicSEO.useLayoutEffect\"]);\n            let canonicalLink = allCanonicals[0];\n            if (!canonicalLink) {\n                canonicalLink = document.createElement('link');\n                canonicalLink.rel = 'canonical';\n                document.head.appendChild(canonicalLink);\n            }\n            const canonicalHref =  true ? \"\".concat(window.location.origin).concat(window.location.pathname) : 0;\n            canonicalLink.setAttribute('href', canonicalHref);\n            // Ensure keywords do not persist\n            const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n            if (metaKeywords) {\n                metaKeywords.content = '';\n            }\n            dbg('[DynamicSEO] Applied neutral SEO because none configured. Old title:', oldTitle, 'New title:', neutralTitle);\n        // Previously showed a visible banner; disabled per request to remove from every page\n        }\n    }[\"DynamicSEO.useLayoutEffect\"], [\n        seo,\n        isActive,\n        (_location3 = location) === null || _location3 === void 0 ? void 0 : _location3.pathname,\n        actualType,\n        actualIdentifier\n    ]);\n    // Manual override to ensure title is set\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            if (title && typeof document !== 'undefined') {\n                dbg('[DynamicSEO] Manual override - setting title to:', title);\n                // Set title multiple times to ensure it sticks\n                document.title = title;\n                // Also try to find and update any existing title tag\n                let titleTag = document.querySelector('title');\n                if (!titleTag) {\n                    titleTag = document.createElement('title');\n                    document.head.appendChild(titleTag);\n                }\n                titleTag.textContent = title;\n                // Force it multiple times to ensure it sticks\n                setTimeout({\n                    \"DynamicSEO.useEffect\": ()=>{\n                        if (document.title !== title) {\n                            dbg('[DynamicSEO] Title still not set, forcing again...');\n                            document.title = title;\n                            if (titleTag) titleTag.textContent = title;\n                        }\n                    }\n                }[\"DynamicSEO.useEffect\"], 100);\n                setTimeout({\n                    \"DynamicSEO.useEffect\": ()=>{\n                        if (document.title !== title) {\n                            dbg('[DynamicSEO] Title still not set, final force...');\n                            document.title = title;\n                            if (titleTag) titleTag.textContent = title;\n                        }\n                    }\n                }[\"DynamicSEO.useEffect\"], 500);\n                // Final check after 1 second\n                setTimeout({\n                    \"DynamicSEO.useEffect\": ()=>{\n                        dbg('[DynamicSEO] Final title check:', document.title);\n                        if (document.title !== title) {\n                            dbg('[DynamicSEO] WARNING: Title still not set correctly!');\n                        }\n                    }\n                }[\"DynamicSEO.useEffect\"], 1000);\n            }\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        title\n    ]);\n    // Monitor for title changes and re-apply if overridden\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            if (title && typeof document !== 'undefined') {\n                dbg('[DynamicSEO] Setting up title change monitor for:', title);\n                // Create a mutation observer to watch for title changes\n                const observer = new MutationObserver({\n                    \"DynamicSEO.useEffect\": (mutations)=>{\n                        mutations.forEach({\n                            \"DynamicSEO.useEffect\": (mutation)=>{\n                                if (mutation.type === 'childList' || mutation.type === 'attributes') {\n                                    const currentTitle = document.title;\n                                    if (currentTitle !== title && currentTitle !== '') {\n                                        dbg('[DynamicSEO] Title was changed by something else! Current:', currentTitle, 'Expected:', title);\n                                        // Re-apply our title\n                                        document.title = title;\n                                        let titleTag = document.querySelector('title');\n                                        if (titleTag) titleTag.textContent = title;\n                                    }\n                                }\n                            }\n                        }[\"DynamicSEO.useEffect\"]);\n                    }\n                }[\"DynamicSEO.useEffect\"]);\n                // Start observing\n                observer.observe(document.head, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    attributeFilter: [\n                        'content'\n                    ]\n                });\n                return ({\n                    \"DynamicSEO.useEffect\": ()=>{\n                        observer.disconnect();\n                    }\n                })[\"DynamicSEO.useEffect\"];\n            }\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        title\n    ]);\n    // Simple test to verify data flow\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicSEO.useEffect\": ()=>{\n            if (seo && isActive) {\n                dbg('[DynamicSEO] SEO data received:', seo);\n                dbg('[DynamicSEO] About to set title to:', seo.title);\n                // Immediately try to set the title\n                if (seo.title && typeof document !== 'undefined') {\n                    dbg('[DynamicSEO] Immediately setting title to:', seo.title);\n                    document.title = seo.title;\n                    // Verify it was set\n                    setTimeout({\n                        \"DynamicSEO.useEffect\": ()=>{\n                            dbg('[DynamicSEO] Title verification - Current title:', document.title);\n                            if (document.title !== seo.title) {\n                                dbg('[DynamicSEO] WARNING: Title was not set correctly!');\n                            }\n                        }\n                    }[\"DynamicSEO.useEffect\"], 100);\n                }\n                // Add a test button to manually set title (only in debug)\n                if (isSeoDebugEnabled && typeof document !== 'undefined') {\n                    const testButtonId = \"seo-title-\".concat(actualType, \"-\").concat(actualIdentifier);\n                    const testButton = document.createElement('button');\n                    testButton.textContent = 'Test Set Title';\n                    testButton.style.cssText = 'position: fixed; top: 10px; right: 10px; z-index: 9999; background: red; color: white; padding: 10px; border: none; border-radius: 5px; cursor: pointer;';\n                    testButton.onclick = ({\n                        \"DynamicSEO.useEffect\": ()=>{\n                            dbg('[DynamicSEO] Manual test - setting title to:', seo.title);\n                            document.title = seo.title;\n                            alert('Title set to: ' + seo.title);\n                        }\n                    })[\"DynamicSEO.useEffect\"];\n                    // Remove any existing test button with this ID\n                    const existingButton = document.getElementById(testButtonId);\n                    if (existingButton) {\n                        document.body.removeChild(existingButton);\n                    }\n                    testButton.id = testButtonId;\n                    document.body.appendChild(testButton);\n                    // Remove button after 30 seconds\n                    setTimeout({\n                        \"DynamicSEO.useEffect\": ()=>{\n                            if (document.body.contains(testButton)) {\n                                document.body.removeChild(testButton);\n                            }\n                        }\n                    }[\"DynamicSEO.useEffect\"], 30000);\n                }\n            }\n        }\n    }[\"DynamicSEO.useEffect\"], [\n        seo,\n        isActive\n    ]);\n    // Render head tags declaratively with Helmet for reliability (plus effects as backup)\n    const canonicalFromHelmet =  true ? actualType === 'company' && (seo === null || seo === void 0 ? void 0 : seo.canonical) ? computeCanonicalHref(seo.canonical) : \"\".concat(window.location.origin).concat(window.location.pathname) : 0;\n    const robotsFromHelmet = seo && typeof seo.robots === 'string' && /noindex/i.test(seo.robots) ? seo.robots : 'index,follow';\n    const titleFromHelmet = (seo === null || seo === void 0 ? void 0 : seo.title) || (seo === null ? \"SEO not configured \\xb7 \".concat(((_location4 = location) === null || _location4 === void 0 ? void 0 : _location4.pathname) || '') : '');\n    const descriptionFromHelmet = (seo === null || seo === void 0 ? void 0 : seo.description) || (seo === null ? 'SEO has not been configured for this page yet.' : '');\n    const keywordsFromHelmet = (seo === null || seo === void 0 ? void 0 : seo.keywords) ? Array.isArray(seo.keywords) ? seo.keywords.join(', ') : seo.keywords : '';\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n        children: [\n            titleFromHelmet ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                children: titleFromHelmet\n            }, void 0, false, {\n                fileName: \"C:\\\\Newmess Internship\\\\Production_1\\\\Frontend-NextJS\\\\components\\\\DynamicSEO.jsx\",\n                lineNumber: 770,\n                columnNumber: 28\n            }, undefined) : null,\n            descriptionFromHelmet ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"description\",\n                content: descriptionFromHelmet\n            }, void 0, false, {\n                fileName: \"C:\\\\Newmess Internship\\\\Production_1\\\\Frontend-NextJS\\\\components\\\\DynamicSEO.jsx\",\n                lineNumber: 772,\n                columnNumber: 11\n            }, undefined) : null,\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"robots\",\n                content: robotsFromHelmet\n            }, void 0, false, {\n                fileName: \"C:\\\\Newmess Internship\\\\Production_1\\\\Frontend-NextJS\\\\components\\\\DynamicSEO.jsx\",\n                lineNumber: 774,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"keywords\",\n                content: keywordsFromHelmet\n            }, void 0, false, {\n                fileName: \"C:\\\\Newmess Internship\\\\Production_1\\\\Frontend-NextJS\\\\components\\\\DynamicSEO.jsx\",\n                lineNumber: 775,\n                columnNumber: 9\n            }, undefined),\n            canonicalFromHelmet ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                rel: \"canonical\",\n                href: canonicalFromHelmet,\n                \"data-dynamic-seo\": \"true\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Newmess Internship\\\\Production_1\\\\Frontend-NextJS\\\\components\\\\DynamicSEO.jsx\",\n                lineNumber: 777,\n                columnNumber: 11\n            }, undefined) : null\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Newmess Internship\\\\Production_1\\\\Frontend-NextJS\\\\components\\\\DynamicSEO.jsx\",\n        lineNumber: 769,\n        columnNumber: 11\n    }, undefined);\n};\n_s(DynamicSEO, \"AodbjwahDVr7dnpLfv2lNmymPuk=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter\n    ];\n});\n_c = DynamicSEO;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DynamicSEO);\nvar _c;\n$RefreshReg$(_c, \"DynamicSEO\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/DynamicSEO.jsx\n"));

/***/ })

});